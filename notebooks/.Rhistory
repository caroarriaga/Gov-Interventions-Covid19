ggtitle("Shelter in place") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
a3<- ggplot(df,
aes(x=(sum_quarantine_travellers.m), y= (covid_deaths_std.m)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
ggtitle("Quarantine for travelers") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
## Election days and interventions
b1<- ggplot(df,
aes(x=(sum_facemask_enforced.e), y= (covid_deaths_std.e)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("Elections Deaths") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
b2<- ggplot(df,
aes(x=(sum_shelter_in_place.e), y= (covid_deaths_std.e)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
b3<- ggplot(df,
aes(x=(sum_quarantine_travellers.e), y= (covid_deaths_std.e)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
## Thanksgiving deaths and inverventions
c1<- ggplot(df,
aes(x=(sum_facemask_enforced.t), y= (covid_deaths_std.t)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("Thanksgiving deaths") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
c2<- ggplot(df,
aes(x=(sum_shelter_in_place.t), y= (covid_deaths_std.t)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("days") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
c3<- ggplot(df,
aes(x=(sum_quarantine_travellers.t), y= (covid_deaths_std.t)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
mylegend<-g_legend(c1)
mylegend<-g_legend(c1)
# library(grid)
#extract legend
# #https://github.com/hadley/ggplot2/wiki/Share-a-legend-between-two-ggplot2-graphs
# g_legend<-function(a.gplot){
#   tmp <- ggplot_gtable(ggplot_build(a.gplot))
#   leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
#   legend <- tmp$grobs[[leg]]
#   return(legend)}
## Mothers day and interventions
a1<- ggplot(df,
aes(x=(sum_facemask_enforced.m), y= (covid_deaths_std.m)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
ggtitle("Public facemask" ) +
xlab("") +
ylab("Mother's day deaths") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
a2<- ggplot(df,
aes(x=(sum_shelter_in_place.m), y= (covid_deaths_std.m)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
ggtitle("Shelter in place") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
a3<- ggplot(df,
aes(x=(sum_quarantine_travellers.m), y= (covid_deaths_std.m)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
ggtitle("Quarantine for travelers") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
## Election days and interventions
b1<- ggplot(df,
aes(x=(sum_facemask_enforced.e), y= (covid_deaths_std.e)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("Elections Deaths") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
b2<- ggplot(df,
aes(x=(sum_shelter_in_place.e), y= (covid_deaths_std.e)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
b3<- ggplot(df,
aes(x=(sum_quarantine_travellers.e), y= (covid_deaths_std.e)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
## Thanksgiving deaths and inverventions
c1<- ggplot(df,
aes(x=(sum_facemask_enforced.t), y= (covid_deaths_std.t)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("Thanksgiving deaths") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
c2<- ggplot(df,
aes(x=(sum_shelter_in_place.t), y= (covid_deaths_std.t)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("days") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
c3<- ggplot(df,
aes(x=(sum_quarantine_travellers.t), y= (covid_deaths_std.t)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
# mylegend<-g_legend(c1)
grid.arrange(a1, a2, a3,
b1, b2, b3,
c1, c2, c3,
nrow = 3,
ncol = 3,
# mylegend,
top=textGrob("Holidays and days of mandates"))
library(grid)
#extract legend
# #https://github.com/hadley/ggplot2/wiki/Share-a-legend-between-two-ggplot2-graphs
# g_legend<-function(a.gplot){
#   tmp <- ggplot_gtable(ggplot_build(a.gplot))
#   leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
#   legend <- tmp$grobs[[leg]]
#   return(legend)}
## Mothers day and interventions
a1<- ggplot(df,
aes(x=(sum_facemask_enforced.m), y= (covid_deaths_std.m)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
ggtitle("Public facemask" ) +
xlab("") +
ylab("Mother's day deaths") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
a2<- ggplot(df,
aes(x=(sum_shelter_in_place.m), y= (covid_deaths_std.m)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
ggtitle("Shelter in place") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
a3<- ggplot(df,
aes(x=(sum_quarantine_travellers.m), y= (covid_deaths_std.m)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
ggtitle("Quarantine for travelers") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
## Election days and interventions
b1<- ggplot(df,
aes(x=(sum_facemask_enforced.e), y= (covid_deaths_std.e)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("Elections Deaths") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
b2<- ggplot(df,
aes(x=(sum_shelter_in_place.e), y= (covid_deaths_std.e)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
b3<- ggplot(df,
aes(x=(sum_quarantine_travellers.e), y= (covid_deaths_std.e)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
## Thanksgiving deaths and inverventions
c1<- ggplot(df,
aes(x=(sum_facemask_enforced.t), y= (covid_deaths_std.t)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("Thanksgiving deaths") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
c2<- ggplot(df,
aes(x=(sum_shelter_in_place.t), y= (covid_deaths_std.t)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("days") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
c3<- ggplot(df,
aes(x=(sum_quarantine_travellers.t), y= (covid_deaths_std.t)
, color=winning_part_2020_presidential_election
, size= population_density_sqmiles
)) +
geom_point() +
# geom_text_repel(aes(label=province_state)) +
# ggtitle("Deaths and public facemask") +
xlab("") +
ylab("") +
theme(legend.position="none",
plot.title = element_text(size=12),
axis.title = element_text(size=8)) +
scale_color_manual(values=c("#F8766D","#619CFF"))
# mylegend<-g_legend(c1)
grid.arrange(a1, a2, a3,
b1, b2, b3,
c1, c2, c3,
nrow = 3,
ncol = 3,
# mylegend,
top=textGrob("Holidays and days of mandates"))
# Mother's day
chart.Correlation(mothers_df[,c("covid_deaths_std",
"sum_facemask_enforced",
"sum_shelter_in_place",
"sum_quarantine_travellers"
# "sum_facemask_citation_fine"
)],
# histogram=TRUE,
# diagonal = "hist",
# pch=19,
labels = c("deaths",
"mask in public",
"shelter in place",
"quarantine for travelers"),
title = "Correlation matrix: Deaths and Government interventions"
# lower= c("cor","none")
)
# Mother's day
chart.Correlation(mothers_df[,c("covid_deaths_std",
"sum_facemask_enforced",
"sum_shelter_in_place",
"sum_quarantine_travellers"
# "sum_facemask_citation_fine"
)],
# histogram=TRUE,
# diagonal = "hist",
# pch=19,
labels = c("deaths",
"mask in public",
"shelter in place",
"quarantine for travelers")
# lower= c("cor","none")
)
mtext("Matrix Correlation: Deaths and Interventions", side=3, line=3)
# stargazer example
stargazer(model_one, model_two, model_three,
type="text",
se = list(rse(model_one),rse(model_two), rse(model_three)),
column.labels = c("M","M+S+Q","M+Q+P"),
dep.var.labels   = "Death toll per 100k inhabitants",
covariate.labels = c("mask in public", "mask in public sqrd",
"shelter in place", "shelter in place sqrd",
"quarantine travelers",
"party"),
add.lines = list(c("optimized model", "Yes", "Yes","Yes"))
)
stargazer::stargazer(header=FALSE, type='latex')
stargazer::stargazer(tble_sg,header=FALSE, type='latex')
# stargazer example
tble_sg<-stargazer(model_one, model_two, model_three,
type="text",
se = list(rse(model_one),rse(model_two), rse(model_three)),
column.labels = c("M","M+S+Q","M+Q+P"),
dep.var.labels   = "Death toll per 100k inhabitants",
covariate.labels = c("mask in public", "mask in public sqrd",
"shelter in place", "shelter in place sqrd",
"quarantine travelers",
"party"),
add.lines = list(c("optimized model", "Yes", "Yes","Yes"))
)
stargazer::stargazer(tble_sg,header=FALSE, type='latex')
# stargazer example
tble_sg<-stargazer(model_one, model_two, model_three,
type="text",
se = list(rse(model_one),rse(model_two), rse(model_three)),
column.labels = c("M","M+S+Q","M+Q+P"),
dep.var.labels   = "Death toll per 100k inhabitants",
covariate.labels = c("mask in public", "mask in public sqrd",
"shelter in place", "shelter in place sqrd",
"quarantine travelers",
"party"),
add.lines = list(c("optimized model", "Yes", "Yes","Yes"))
)
stargazer::stargazer(tble_sg,header=FALSE, type='latex')
# stargazer example
stargazer(model_one, model_two, model_three,
type="text",
se = list(rse(model_one),rse(model_two), rse(model_three)),
column.labels = c("M","M+S+Q","M+Q+P"),
dep.var.labels   = "Death toll per 100k inhabitants",
covariate.labels = c("mask in public", "mask in public sqrd",
"shelter in place", "shelter in place sqrd",
"quarantine travelers",
"party"),
add.lines = list(c("optimized model", "Yes", "Yes","Yes")),
header=FALSE, type='latex'
)
# stargazer example
stargazer(model_one, model_two, model_three,
# type="text",
se = list(rse(model_one),rse(model_two), rse(model_three)),
column.labels = c("M","M+S+Q","M+Q+P"),
dep.var.labels   = "Death toll per 100k inhabitants",
covariate.labels = c("mask in public", "mask in public sqrd",
"shelter in place", "shelter in place sqrd",
"quarantine travelers",
"party"),
add.lines = list(c("optimized model", "Yes", "Yes","Yes")),
header=FALSE, type='latex'
)
# stargazer example
stargazer(model_one, model_two, model_three,
# type="text",
se = list(rse(model_one),rse(model_two), rse(model_three)),
column.labels = c("M","M+S+Q","M+Q+P"),
dep.var.labels   = "Death toll per 100k inhabitants",
covariate.labels = c("mask in public", "mask in public sqrd",
"shelter in place", "shelter in place sqrd",
"quarantine travelers",
"party"),
add.lines = list(c("optimized model", "Yes", "Yes","Yes")),
header=FALSE, type='latex'
)
